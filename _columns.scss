@mixin theWidth($columns, $margin: $column_margin){

	$totalMargin: ($margin * $columns) * 2;
	$outers: $margin * 2;
	$baseWidth: 100% - ($totalMargin - $outers);
	$finalWidth: $baseWidth / $columns;
	width: $finalWidth;

	@if $columns > 2{
		@for $count from 2 through ($columns - 1){
			&.colspan-#{$count}{
				width: ($finalWidth * $count) + ((($margin * 2) * $count) - $outers);
			}
		}
	}
}

@for $i from 2 through 10 {

	.row{
		&.count-#{$i}{

			&[data-flex="true"]{
				display: flex;
				align-items: stretch;
				flex-wrap: wrap;

				> .column{
					display: inline-flex !important;
				}
			}

			> .column{
				margin: $column_margin;
				display: inline-block;
				float: left;
				position: relative;
				@include theWidth($i);
				
				&:nth-child(#{$i}n){
					margin-right: 0;
				}
			
				&.last-in-row{
					margin-right: 0;
				}
			
				&:nth-child(#{$i}n + 1){
					margin-left: 0;
					clear: left;
				}
		
				&.first-in-row{
					margin-left: 0;
					clear: left;
				}
			}

			&:not(.no-break){
				@media screen and (max-width:900px){
					@if $i > 4 {
						> .column{
							@include theWidth(4);
							margin: $column_margin;
							clear:none;

							&:nth-child(4n){
								margin-right: 0;
								margin-left: $column_margin;
								clear: none;
							}

							&:first-child,
							&:nth-child(4n + 1){
								margin-left: 0;
								margin-right: $column_margin;
								clear: left;
							}
						}
					}
				}

				@media screen and (max-width:900px){
					@if $i > 3 {
						&:not([data-min-cols^="1111"]){
							> .column{
								@include theWidth(3);
								margin: $column_margin;
								clear:none;

								&:nth-child(3n){
									margin-right: 0;
									margin-left: $column_margin;
									clear: none;
								}

								&:first-child,
								&:nth-child(3n + 1){
									margin-left: 0;
									margin-right: $column_margin;
									clear: left;
								}
							}
						}
					}
				}

				@media screen and (max-width:750px){
					@if $i > 2 {
						&:not([data-min-cols^="111"]){
							> .column{
								@include theWidth(2);
								margin: $column_margin;
								clear:none;

								&:nth-child(2n){
									margin-right: 0;
									margin-left: $column_margin;
									clear: none;
								}

								&:first-child,
								&:nth-child(2n + 1){
									margin-left: 0;
									margin-right: $column_margin;
									clear: left;
								}
							}
						}
					}
				}

				@media screen and (max-width:550px){
					&:not([data-min-cols^="11"]){
						> .column{
							width: 100%;
							float: none;
							margin: $column_margin 0% $column_margin 0% !important;
							clear: both !important;
						}
					}
				}
			}
		}

		&.no-margin.count-#{$i}{

			> .column{
				margin: 0;
				@include theWidth($i, 0);
			}

			&:not(.no-break){
				@media screen and (max-width:900px){
					@if $i > 4 {
						> .column{
							@include theWidth(4, 0);
							margin: 0;

							&:nth-child(4n){
								margin-left: 0;
							}

							&:first-child,
							&:nth-child(4n + 1){
								margin-right: 0;
							}
						}
					}
				}

				@media screen and (max-width:900px){
					@if $i > 3 {
						&:not([data-min-cols^="1111"]){
							> .column{
								@include theWidth(3, 0);
								margin: 0;

								&:nth-child(3n){
									margin-left: 0;
								}

								&:first-child,
								&:nth-child(3n + 1){
									margin-right: 0;
								}
							}
						}
					}
				}

				@media screen and (max-width:750px){
					@if $i > 2 {
						&:not([data-min-cols^="111"]){
							> .column{
								@include theWidth(2, 0);
								margin: 0;

								&:nth-child(2n){
									margin-left: 0;
								}

								&:first-child,
								&:nth-child(2n + 1){
									margin-right: 0;
								}
							}
						}
					}
				}

				@media screen and (max-width:550px){
					&:not([data-min-cols^="11"]){
						> .column{
							width: 100%;
							margin: 0% 0% 0% 0% !important;
						}
					}
				}
			}
		}
	}
}

@mixin makeColumns($rowClass, $countClass, $columnClass){
	@for $i from 2 through 10 {
		#{$rowClass}{

			&#{$countClass}#{$i}{

				> #{$columnClass}{
					margin: $column_margin;
					display: inline-block;
					float: left;
					position: relative;
					@include theWidth($i);

					&:nth-child(#{$i}n){
						margin-right: 0;
					}

					&.last-in-row{
						margin-right: 0;
					}

					&:nth-child(#{$i}n + 1){
						margin-left: 0;
						clear: left;
					}

					&.first-in-row{
						margin-left: 0;
						clear: left;
					}

					@media screen and (max-width:900px){
						@if $i > 3 {
							@include theWidth(3);
							margin: $column_margin;
							clear:none;

							&:nth-child(3n){
								margin-right: 0;
								margin-left: $column_margin;
								clear: none;
							}

							&:first-child,
							&:nth-child(3n + 1){
								margin-left: 0;
								margin-right: $column_margin;
								clear: left;
							}
						}
					}

					@media screen and (max-width:750px){
						@if $i > 2 {
							@include theWidth(2);
							margin: $column_margin;
							clear:none;

							&:nth-child(2n){
								margin-right: 0;
								margin-left: $column_margin;
								clear: none;
							}

							&:first-child,
							&:nth-child(2n + 1){
								margin-left: 0;
								margin-right: $column_margin;
								clear: left;
							}
						}
					}

					@media screen and (max-width:550px){
						width: 100%;
						float: none;
						margin: $column_margin 0% $column_margin 0% !important;
						clear: both !important
					}
				}
			}
		}
	}
}

/*
* FLOATCONTAINER
*/
.row:after {
	visibility: hidden;
	display: block;
	font-size: 0;
	content: " ";
	clear: both;
	height: 0;
}
* html .row {
	zoom: 1;
}
*:first-child+html .row {
	zoom: 1;
}
