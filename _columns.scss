@mixin theWidth($columns, $margin: $column_margin){

	$totalMargin: ($margin * $columns) * 2;
	$outers: $margin * 2;
	$baseWidth: 100% - ($totalMargin - $outers);
	$finalWidth: $baseWidth / $columns;
	width: $finalWidth;

	@if $columns > 2{
		@for $count from 2 through ($columns - 1){
			&.colspan-#{$count}{
				width: ($finalWidth * $count) + ((($margin * 2) * $count) - $outers);
			}
		}
	}

}

@mixin make_columns($column_class, $nr_of_columns, $insert_clear: true, $margin: $column_margin){

	&[data-flex="true"]{
		display: flex;
		align-items: stretch;
		flex-wrap: wrap;
	}

	> .#{$column_class}{
		margin: $margin;
		display: inline-block;
		float: left;
		position: relative;
		@include theWidth($nr_of_columns, $margin);

		&:nth-child(#{$nr_of_columns}n){
			margin-right: 0;
		}

		&.last-in-row{
			margin-right: 0;
		}

		&:nth-child(#{$nr_of_columns}n + 1){
			margin-left: 0;
			clear: left;
		}

		&.first-in-row{
			margin-left: 0;
			clear: left;
		}
	}

	&:not(.no-break){
		@media screen and (max-width:$tablets){
			@if $nr_of_columns > 4 {
				> .#{$column_class}{
					@include theWidth(4, $margin);
					margin: $margin;
					clear:none;

					&:nth-child(4n){
						margin-right: 0;
						margin-left: $margin;
						clear: none;
					}

					&:first-child,
					&:nth-child(4n + 1){
						margin-left: 0;
						margin-right: $margin;
						clear: left;
					}
				}
			}
		}

		@media screen and (max-width:$tablets){
			@if $nr_of_columns > 3 {
				&:not([data-min-cols^="1111"]){
					> .#{$column_class}{
						@include theWidth(3, $margin);
						margin: $margin;
						clear:none;

						&:nth-child(3n){
							margin-right: 0;
							margin-left: $margin;
							clear: none;
						}

						&:first-child,
						&:nth-child(3n + 1){
							margin-left: 0;
							margin-right: $margin;
							clear: left;
						}
					}
				}
			}
		}

		@media screen and (max-width:$phones){
			@if $nr_of_columns > 2 {
				&:not([data-min-cols^="111"]){
					> .#{$column_class}{
						@include theWidth(2, $margin);
						margin: $margin;
						clear:none;

						&:nth-child(2n){
							margin-right: 0;
							margin-left: $margin;
							clear: none;
						}

						&:first-child,
						&:nth-child(2n + 1){
							margin-left: 0;
							margin-right: $margin;
							clear: left;
						}
					}
				}
			}
		}

		@media screen and (max-width:$phones){
			&:not([data-min-cols^="11"]){
				> .#{$column_class}{
					width: 100% !important;
					float: none;
					margin: $margin 0% $margin 0% !important;
					clear: both !important;
				}
			}
		}
	}

	&.no-margin{

		> .#{$column_class}{
			margin: 0;
			@include theWidth($nr_of_columns, 0);
		}

		&:not(.no-break){
			@media screen and (max-width:$tablets){
				@if $nr_of_columns > 4 {
					> .#{$column_class}{
						@include theWidth(4, 0);
						margin: 0;

						&:nth-child(4n){
							margin-left: 0;
						}

						&:first-child,
						&:nth-child(4n + 1){
							margin-right: 0;
						}
					}
				}
			}

			@media screen and (max-width:$tablets){
				@if $nr_of_columns > 3 {
					&:not([data-min-cols^="1111"]){
						> .#{$column_class}{
							@include theWidth(3, 0);
							margin: 0;

							&:nth-child(3n){
								margin-left: 0;
							}

							&:first-child,
							&:nth-child(3n + 1){
								margin-right: 0;
							}
						}
					}
				}
			}

			@media screen and (max-width:$phones){
				@if $nr_of_columns > 2 {
					&:not([data-min-cols^="111"]){
						> .#{$column_class}{
							@include theWidth(2, 0);
							margin: 0;

							&:nth-child(2n){
								margin-left: 0;
							}

							&:first-child,
							&:nth-child(2n + 1){
								margin-right: 0;
							}
						}
					}
				}
			}

			@media screen and (max-width:$phones){
				&:not([data-min-cols^="11"]){
					> .#{$column_class}{
						width: 100%;
						margin: 0% 0% 0% 0% !important;
					}
				}
			}
		}
	}


	@if ($insert_clear) {
		&:after {
			visibility: hidden;
			display: block;
			font-size: 0;
			content: " ";
			clear: both;
			height: 0;
		}
		* html & {
			zoom: 1;
		}
		*:first-child + html & {
			zoom: 1;
		}
	}
}

@for $i from 2 through 10 {
	.row{
		&.count-#{$i} {
			@include make_columns('column', $i, false);
		}

		&:after {
			visibility: hidden;
			display: block;
			font-size: 0;
			content: " ";
			clear: both;
			height: 0;
		}
		* html & {
			zoom: 1;
		}
		*:first-child + html & {
			zoom: 1;
		}
	}
}
